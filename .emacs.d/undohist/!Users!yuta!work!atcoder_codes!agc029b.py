
((digest . "c7a746c597b4b23e566b10100002f0ee") (undo-list nil (284 . 293) ("summ" . -284) ((marker . 293) . -4) 288 nil (284 . 288) (t 23581 3152 601330 4000) nil (392 . 393) nil (383 . 392) ("summa" . -383) ((marker . 293) . -5) 388 nil (383 . 388) nil ("m" . -383) ((marker . 293) . -1) ("a" . -384) ((marker . 293) . -1) ("x" . -385) ((marker . 293) . -1) ("_" . -386) ((marker . 293) . -1) ("n" . -387) ((marker . 293) . -1) ("u" . -388) ((marker . 293) . -1) ("m" . -389) ((marker . 293) . -1) 390 nil (" + A[i])" . -390) ((marker . 293) . -8) ((marker*) . 1) ((marker) . -8) ((marker) . -8) 398 nil (" " . -400) ((marker . 293) . -1) (" " . -401) ((marker . 293) . -1) (" " . -402) ((marker . 293) . -1) 403 nil ("        " . -403) ((marker . 293) . -8) ((marker) . -8) 411 nil ("        " . -411) ((marker . 293) . -8) ((marker) . -8) 419 nil ("        " . -419) ((marker . 293) . -8) ((marker) . -8) 427 nil ("        " . -427) ((marker . 293) . -8) ((marker) . -8) 435 nil ("        " . -435) ((marker . 293) . -8) ((marker) . -8) 443 nil (246 . 255) (t 23581 3089 863470 958000) nil ("s" . -246) ((marker . 293) . -1) ("u" . -247) ((marker . 293) . -1) ("m" . -248) ((marker . 293) . -1) 249 nil ("s" . -278) ((marker . 293) . -1) ("u" . -279) ((marker . 293) . -1) ("m" . -280) ((marker . 293) . -1) 281 nil (277 . 282) nil (" max_num" . -277) ((marker . 293) . -8) 285 nil (" + A[i] " . -285) ((marker . 293) . -8) 293 nil (260 . 266) nil (" " . -260) ((marker . 293) . -1) 261 nil (259 . 261) nil (252 . 259) ("max_" . -252) ((marker . 293) . -4) 256 nil (246 . 256) nil (237 . 246) (t 23581 3064 972165 452000) nil (377 . 378) nil ("]" . -377) ((marker . 293) . -1) ((marker*) . 1) ((marker) . -1) 378 nil (377 . 378) (t 23581 3054 301132 158000) nil (377 . 378) nil (")" . -377) ((marker . 293) . -1) ((marker*) . 1) ((marker) . -1) 378 nil (376 . 378) nil ("
" . 376) nil (373 . 376) nil (373 . 418) nil (369 . 373) nil (362 . 369) ("max_" . -362) ((marker . 293) . -4) 366 nil (355 . 366) nil (348 . 355) ("squ" . -348) ((marker . 293) . -3) 351 nil (348 . 351) nil (347 . 348) nil (340 . 347) ("squ" . -340) ((marker . 293) . -3) 343 nil (337 . 343) nil (330 . 337) ("sq" . -330) ((marker . 293) . -2) 332 nil (330 . 332) nil ("i" . -330) ((marker . 293) . -1) ("n" . -331) ((marker . 293) . -1) ("d" . -332) ((marker . 293) . -1) ("e" . -333) ((marker . 293) . -1) ("x" . -334) ((marker . 293) . -1) 335 nil (333 . 335) nil (330 . 333) nil ("い" . -330) ((marker . 293) . -1) (330 . 331) ("いn" . -330) ((marker . 293) . -2) (330 . 332) ("い" . -330) ((marker . 293) . -1) (330 . 331) (t 23581 2986 467618 864000) nil (317 . 330) nil ("        
" . 205) nil ("
" . 205) nil ("    if cnt == 0:" . 205) nil ("
" . 205) nil (222 . 231) nil (221 . 222) nil (221 . 226) nil (210 . 221) nil (205 . 210) (t 23581 265 777369 104000) nil ("
pairs = []
for i in range(N):
    for j in range(i + 1, N):
        if A[i] + A[j] in squared:
            pairs.append([A[i], A[j]])

adopt = [format(i, 'b').rjust(len(pairs), '0') for i in range(2**len(pairs))]
max_pair = 0

for i in range(len(adopt)):
    num = []
    for j in range(len(pairs)):
        if adopt[i][j] == '1':
            num.append(pairs[j][0])
            num.append(pairs[j][1])
    if len(num) == len(set(num)) and len(num) > max_pair:
        max_pair = len(num)

print(max_pair // 2)
" . 356) ((marker . 293) . -512) ((marker) . -512) 868 (t 23581 248 706550 95000) nil (326 . 331) nil ("continue" . -326) ((marker . 293) . -8) ((marker . 418) . -8) 334 (t 23581 221 883676 251000) nil (255 . 259) nil ("n" . -255) ((marker . 293) . -1) ("u" . -256) ((marker . 293) . -1) ("m" . -257) ((marker . 293) . -1) 258 nil ("        num = A[i]" . 233) nil ("
" . 233) (t 23581 205 515808 501000) nil (" " . -277) ((marker . 293) . -1) 278 nil (273 . 277) (t 23581 190 971672 173000) nil (341 . 349) ("conti" . -341) ((marker . 293) . -5) 346 nil (341 . 346) nil (328 . 341) (t 23581 152 445337 78000) nil (339 . 340) nil (330 . 339) nil (330 . 342) ("            " . 329) ((marker . 293) . -12) (328 . 342) (t 23580 65515 189557 890000) nil (320 . 328) nil (242 . 252) nil (233 . 242) nil ("n" . -255) ((marker . 293) . -1) ("u" . -256) ((marker . 293) . -1) ("m" . -257) ((marker . 293) . -1) 258 nil (230 . 232) nil (219 . 229) nil (214 . 215) nil ("n" . -214) ((marker . 293) . -1) ("u" . -215) ((marker . 293) . -1) ("m" . -216) ((marker . 293) . -1) 217 nil (281 . 294) nil (277 . 281) nil ("+" . -277) ((marker . 293) . -1) ("+" . -278) ((marker . 293) . -1) 279 nil (273 . 279) nil (260 . 273) nil (259 . 260) nil (252 . 259) ("squ" . -252) ((marker . 293) . -3) 255 nil (245 . 255) nil (242 . 245) nil (235 . 242) ("max_" . -235) ((marker . 293) . -4) 239 nil (235 . 239) nil ("n" . -235) ((marker . 293) . -1) ("u" . -236) ((marker . 293) . -1) ("m" . -237) ((marker . 293) . -1) (" " . -238) ((marker . 293) . -1) ("*" . -239) ((marker . 293) . -1) (" " . -240) ((marker . 293) . -1) 241 nil (232 . 241) nil (223 . 232) nil (222 . 223) nil ("]" . -222) ((marker . 293) . -1) ((marker*) . 1) ((marker) . -1) 223 nil (214 . 223) nil ("i" . -214) ((marker . 293) . -1) (" " . -215) ((marker . 293) . -1) ("i" . -216) ((marker . 293) . -1) ("n" . -217) ((marker . 293) . -1) (" " . -218) ((marker . 293) . -1) ("r" . -219) ((marker . 293) . -1) ("a" . -220) ((marker . 293) . -1) ("n" . -221) ((marker . 293) . -1) ("g" . -222) ((marker . 293) . -1) ("e" . -223) ((marker . 293) . -1) ("(" . -224) ((marker . 293) . -1) 225 nil (210 . 225) (t 23580 65371 872192 900000) nil (205 . 210) (t 23580 65331 898345 10000) nil (203 . 205) nil (198 . 203) nil ("a" . -198) ((marker . 293) . -1) 199 nil (190 . 199) nil ("_" . -190) ((marker . 293) . -1) 191 nil (188 . 191) nil (183 . 188) nil (182 . 183) nil (":" . -182) ((marker . 293) . -1) 183 nil (175 . 183) nil ("    " . -175) (174 . 175) nil (171 . 174) nil (" " . -171) ((marker . 293) . -1) 172 nil (167 . 172) nil ("c" . -167) ((marker . 293) . -1) (167 . 168) ("cん" . -167) ((marker . 293) . -2) (167 . 169) ("cんt" . -167) ((marker . 293) . -3) (167 . 170) ("cんt" . -167) ((marker . 293) . -3) (167 . 170) ("cn" . -167) ((marker . 293) . -2) (167 . 169) ("c" . -167) ((marker . 293) . -1) (167 . 168) 171 nil (167 . 171) ("    " . 166) ((marker . 293) . -4) (165 . 171) (t 23580 65221 549472 686000) nil ("
" . -82) ((marker . 293) . -1) ("
" . -83) ((marker . 293) . -1) 84 nil (82 . 84) (t 23578 1033 890124 833000) nil (677 . 678) nil ("
" . -677) ("
" . -678) ("a" . -679) 680 nil (679 . 680) nil (678 . 679) (t 23575 12793 397332 10000) nil ("

# test
def test1():
    print('test')


def test2():
    print('test2')


print1()
print2()
a = [1, 2, 3, 4, 5]
" . 678) 792 (t 23574 10878 612805 943000) nil (217 . 788) ("+1, N):
        if A[i] + A[j] in squared:
            pairs.append([A[i], A[j]])

adopt = [format(i, 'b').rjust(len(pairs), '0') for i in range(2**len(pairs))]
max_pair = 0

for i in range(len(adopt)):
    num = []
    for j in range(len(pairs)):
        if adopt[i][j] == '1':
            num.append(pairs[j][0])
            num.append(pairs[j][1])
    if len(num) == len(set(num)) and len(num) > max_pair:
        max_pair = len(num)

print(max_pair // 2)

# test
def test1():
    print('test')
def test2():
    print('test2')

print1()
print2()
a = [1,2  ,3,
     4,  " . 217) 792 (t 23574 10720 375300 735000) nil (786 . 792) nil (785 . 786) nil (779 . 785) nil (766 . 779) nil (765 . 766) (t 23574 10406 964681 834000) nil (765 . 766) nil (757 . 765) nil ("    " . 757) (756 . 757) nil (753 . 756) nil ("2" . -753) 754 nil (748 . 754) nil (748 . 752) ("    " . 748) (747 . 748) nil ("
" . -747) ("p" . -748) 749 nil (748 . 749) nil (748 . 752) ("    " . 747) (746 . 752) nil (732 . 746) nil (728 . 732) ("    " . 728) (727 . 728) nil (726 . 727) nil (715 . 726) nil (714 . 719) nil (692 . 693) nil (700 . 713) nil (695 . 700) nil (694 . 695) nil (684 . 694) (t 23574 10366 140864 959000) nil (683 . 684) nil (678 . 683) nil (677 . 678) (t 23574 9789 917344 91000) nil ("
" . 677) nil ("# test" . 677) nil ("
" . 684) nil ("print(\"aiueo\")" . 684) (t 23574 9785 989980 454000) nil (698 . 699) nil (696 . 698) nil ("2" . -696) 697 nil (")" . -697) 698 nil (690 . 698) nil ("a" . -690) ("i" . -691) ("u" . -692) 693 nil (687 . 693) nil ("t" . -687) 688 nil (684 . 688) nil (683 . 684) nil (678 . 683) nil (677 . 678) nil ("/" . -677) ("/" . -678) 679 nil (677 . 679) nil (676 . 677) nil ("
" . -676) ("
" . -677) ("a" . -678) ("i" . -679) ("u" . -680) ("e" . -681) ("o" . -682) ("
" . -683) 684 nil (683 . 684) nil (678 . 683) nil (676 . 678) (t 23573 7045 252588 676000)))
