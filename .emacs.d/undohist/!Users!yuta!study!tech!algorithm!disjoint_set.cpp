
((digest . "363b0fc326df8378c9f914e497a6ea1b") (undo-list nil (998 . 999) nil (997 . 998) nil (995 . 997) nil (994 . 995) nil (993 . 994) nil (992 . 993) nil (984 . 992) nil (977 . 984) (t 23704 30378 854861 708000) nil (948 . 949) nil (943 . 948) nil (941 . 943) nil (940 . 941) nil (939 . 940) nil (937 . 939) nil (936 . 937) nil (935 . 936) nil ("," . -935) ((marker . 999) . -1) 936 nil (935 . 936) nil (934 . 935) nil (926 . 934) nil (924 . 926) nil (919 . 924) nil (913 . 919) ("      " . 913) (912 . 913) nil ("
" . 912) nil ("      if (ds.same(x, y)) cout <<" . 912) nil ("
" . 912) nil (943 . 945) nil (937 . 943) nil (936 . 937) nil (922 . 923) nil (919 . 922) nil (";" . -932) ((marker . 999) . -1) 933 nil (932 . 933) nil (931 . 932) nil (929 . 931) nil (928 . 929) nil (927 . 928) nil (926 . 927) nil (919 . 926) nil (912 . 919) (t 23704 30325 617746 51000) nil ("
" . 788) nil (809 . 811) ("    " . 809) ((marker . 808) . -2) 831 nil (nil rear-nonsticky nil 830 . 831) (nil fontified nil 830 . 831) (nil fontified nil 829 . 830) (nil fontified nil 828 . 829) (nil fontified nil 827 . 828) (nil fontified nil 826 . 827) (nil fontified nil 825 . 826) (nil fontified nil 824 . 825) (nil fontified nil 823 . 824) (nil fontified nil 822 . 823) (nil fontified nil 821 . 822) (nil fontified nil 820 . 821) (nil fontified nil 819 . 820) (nil fontified nil 818 . 819) (nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 815 . 816) (nil fontified nil 814 . 815) (nil fontified nil 813 . 814) (nil fontified nil 811 . 813) (811 . 831) nil (809 . 811) ("  " . 808) ((marker . 999) . -2) (810 . 811) nil (807 . 810) nil ("  DisjointSet ds(n);" . 789) nil (808 . 809) nil (807 . 808) nil (806 . 807) nil (805 . 806) nil (";" . -805) ((marker . 999) . -1) 806 nil (805 . 806) nil (802 . 805) nil ("(" . -802) ((marker . 999) . -1) 803 nil (802 . 803) nil (791 . 802) nil (788 . 791) nil ("i" . -897) ((marker . 999) . -1) ("f" . -898) ((marker . 999) . -1) (" " . -899) ((marker . 999) . -1) ("(" . -900) ((marker . 999) . -1) 901 nil (900 . 901) nil (897 . 900) nil ("f" . -897) ((marker . 999) . -1) ("i" . -898) ((marker . 999) . -1) (" " . -899) ((marker . 999) . -1) 900 nil (897 . 900) nil (890 . 897) (t 23704 30230 124543 822000) nil (385 . 386) nil (369 . 385) nil (364 . 369) nil (363 . 364) nil (362 . 363) nil (353 . 362) nil (352 . 353) nil (342 . 352) nil ("x" . -342) ((marker . 999) . -1) 343 nil (336 . 343) nil ("r" . -336) ((marker . 999) . -1) ("e" . -337) ((marker . 999) . -1) ("t" . -338) ((marker . 999) . -1) ("u" . -339) ((marker . 999) . -1) ("r" . -340) ((marker . 999) . -1) ("n" . -341) ((marker . 999) . -1) 342 nil (335 . 342) nil (334 . 335) nil (320 . 334) nil (319 . 320) nil (316 . 319) (t 23704 30089 884458 364000) nil ("}" . 611) nil ("
" . 611) nil (608 . 610) ("    " . 608) ((marker . 999) . -4) (612 . 613) nil ("*" . -612) ((marker . 999) . -1) 613 nil (612 . 613) nil (607 . 612) (t 23704 30079 298757 295000) nil (602 . 606) ("      " . 602) ((marker . 999) . -6) (608 . 609) nil (601 . 608) nil (600 . 601) nil (592 . 600) nil (585 . 592) nil (584 . 585) nil (582 . 584) nil (561 . 582) nil (554 . 561) nil (553 . 554) nil (552 . 553) ("else" . 552) ((marker . 999) . -4) (548 . 552) 552 nil (547 . 552) nil (542 . 546) ("      " . 542) ((marker . 999) . -6) (548 . 549) nil (541 . 548) nil (540 . 541) nil (538 . 540) nil (517 . 538) nil (510 . 517) nil (509 . 510) nil (508 . 509) nil (507 . 508) nil (505 . 507) nil (494 . 505) nil (493 . 494) nil (480 . 493) nil (479 . 480) nil (476 . 479) nil ("      if (" . 476) nil ("
" . 476) nil ("      parent[root_x] = root_y;" . 476) nil ("
" . 476) ((marker*) . 1) nil ("{" . 476) ((marker*) . 1) ((marker) . -1) nil ("i" . -476) ((marker . 999) . -1) ("f" . -477) ((marker . 999) . -1) (" " . -478) ((marker . 999) . -1) ("(" . -479) ((marker . 999) . -1) ("r" . -480) ((marker . 999) . -1) ("a" . -481) ((marker . 999) . -1) ("n" . -482) ((marker . 999) . -1) ("k" . -483) ((marker . 999) . -1) 484 nil ("[root_x]" . -484) ((marker . 999) . -8) ((marker*) . 1) ((marker) . -8) ((marker*) . 8) ((marker) . -1) 492 nil (480 . 492) nil (479 . 480) nil (476 . 479) nil (518 . 519) nil (515 . 518) nil (508 . 515) nil (507 . 508) nil (493 . 507) nil ("t" . -493) ((marker . 999) . -1) 494 nil (484 . 494) nil ("p" . -484) ((marker . 999) . -1) ("a" . -485) ((marker . 999) . -1) 486 nil (484 . 486) nil (477 . 484) nil (476 . 477) nil (475 . 476) ("else" . 475) ((marker . 999) . -4) (471 . 475) 475 nil (470 . 475) nil (465 . 469) ("      " . 465) ((marker . 999) . -6) (471 . 472) nil (465 . 471) ("      " . 465) (464 . 465) nil (463 . 464) nil (447 . 463) nil (440 . 447) nil ("
" . 440) nil (433 . 440) nil (432 . 433) nil ("{" . -432) ((marker . 999) . -1) 433 nil (433 . 440) nil (432 . 433) nil (431 . 432) nil (430 . 431) nil (" " . -430) ((marker . 999) . -1) 431 nil (430 . 431) nil (417 . 430) nil (416 . 417) nil (414 . 416) nil (" " . -414) ((marker . 999) . -1) 415 nil (403 . 408) nil (404 . 410) nil (403 . 404) nil (402 . 403) nil (399 . 402) nil (394 . 399) nil ("    if (rank[find(x)] > rank[find(y)]) " . 394) ((marker . 464) . -20) nil ("
" . 394) nil (393 . 394) nil (392 . 393) nil (391 . 392) nil (390 . 391) nil (376 . 390) nil (375 . 376) nil (374 . 375) nil (373 . 374) nil (372 . 373) nil ("8" . -372) ((marker . 999) . -1) ((marker) . -1) ("x" . -373) ((marker . 999) . -1) ((marker) . -1) (")" . -374) ((marker . 999) . -1) ((marker*) . 1) ((marker) . -1) 375 nil (374 . 375) nil (368 . 374) nil ("r" . -368) ((marker . 999) . -1) ("a" . -369) ((marker . 999) . -1) ("n" . -370) ((marker . 999) . -1) ("k" . -371) ((marker . 999) . -1) ("(" . -372) ((marker . 999) . -1) ("x" . -373) ((marker . 999) . -1) (")" . -374) ((marker . 999) . -1) ((marker*) . 1) ((marker) . -1) 375 nil (374 . 375) nil (373 . 374) nil (372 . 373) nil (355 . 372) nil (350 . 355) nil ("      }" . 390) nil ("
" . 390) nil ("{" . -390) ((marker . 999) . -1) 391 nil (390 . 391) nil (389 . 390) nil ("  " . 398) ((marker . 999) . -2) (400 . 401) nil (397 . 400) nil (390 . 396) ("  " . 390) (389 . 390) nil ("
" . 389) nil (" " . -389) ((marker . 999) . -1) 390 nil (363 . 364) nil ("(" . -363) ((marker . 999) . -1) 364 nil (371 . 372) nil (")" . -371) ((marker . 999) . -1) ((marker*) . 1) ((marker) . -1) 372 nil (388 . 389) nil (")" . -388) ((marker . 999) . -1) ((marker*) . 1) ((marker) . -1) 389 nil (387 . 388) nil (")" . -387) ((marker . 999) . -1) ((marker*) . 1) ((marker) . -1) 388 nil (379 . 380) nil ("(" . -379) ((marker . 999) . -1) 380 nil (389 . 390) nil (386 . 389) nil (385 . 386) nil ("x" . -385) ((marker . 999) . -1) 386 nil (385 . 386) nil (384 . 385) nil (380 . 384) nil (379 . 380) nil (375 . 379) nil ("f" . -375) ((marker . 999) . -1) 376 nil (374 . 376) nil (373 . 374) nil ("<" . -373) ((marker . 999) . -1) 374 nil (373 . 374) nil (372 . 373) nil (370 . 372) nil (369 . 370) nil (368 . 369) nil (364 . 368) nil ("x" . -364) ((marker . 999) . -1) (")" . -365) ((marker . 999) . -1) ((marker*) . 1) ((marker) . -1) 366 nil (365 . 366) nil (364 . 365) nil (363 . 364) nil (359 . 363) nil (358 . 359) nil (355 . 358) nil (311 . 316) (t 23704 29779 677376 68000) nil ("
" . -355) ((marker . 999) . -1) 356 nil ("  // if x and y belong to the " . -356) ((marker . 999) . -30) 386 nil ("a" . -386) ((marker . 999) . -1) ("s" . -387) ((marker . 999) . -1) ("a" . -388) ((marker . 999) . -1) 389 nil (381 . 389) nil (360 . 381) nil (358 . 360) nil (355 . 358) (t 23704 29754 138619 111000) nil (413 . 414) nil (412 . 413) nil (411 . 412) nil (410 . 411) nil (402 . 410) nil (401 . 402) nil ("," . -401) ((marker . 999) . -1) (" " . -402) ((marker . 999) . -1) ("y" . -403) ((marker . 999) . -1) 404 nil (402 . 404) nil (401 . 402) nil (400 . 401) nil (399 . 400) nil (395 . 399) nil (388 . 395) nil (383 . 388) nil (345 . 350) (t 23704 29720 400864 894000) nil (223 . 225) nil (125 . 136) nil (123 . 125) (t 23704 29704 178955 491000) nil (270 . 271) nil (257 . 270) nil (252 . 257) nil (251 . 252) nil (240 . 251) nil ("r" . -240) ((marker . 999) . -1) ("a" . -241) ((marker . 999) . -1) ("n" . -242) ((marker . 999) . -1) ("b" . -243) ((marker . 999) . -1) ("k" . -244) ((marker . 999) . -1) 245 nil (240 . 245) nil (235 . 240) nil (200 . 204) ("      " . 200) ((marker . 999) . -6) (206 . 207) nil (199 . 206) nil (198 . 199) nil (197 . 198) nil (196 . 197) nil (213 . 217) nil ("S" . -213) ((marker . 999) . -1) ("e" . -214) ((marker . 999) . -1) ("t" . -215) ((marker . 999) . -1) 216 nil (195 . 196) nil (190 . 195) nil ("e" . -190) ((marker . 999) . -1) ("S" . -191) ((marker . 999) . -1) ("e" . -192) ((marker . 999) . -1) ("t" . -193) ((marker . 999) . -1) 194 nil (191 . 194) nil (187 . 191) nil (180 . 187) nil (179 . 180) nil (178 . 179) nil (177 . 178) nil (173 . 177) nil (172 . 173) nil (170 . 172) nil (169 . 170) nil (166 . 169) nil (165 . 166) nil (" " . -165) ((marker . 999) . -1) 166 nil (156 . 166) nil (155 . 156) nil (151 . 155) nil (147 . 151) ("  " . -147) ((marker . 999) . -2) ("  " . 149) nil (109 . 112) nil (61 . 62) nil (56 . 61) nil (42 . 56) nil (40 . 42) nil (86 . 87) nil (79 . 86) nil (78 . 79) nil (77 . 78) nil (68 . 77) nil (64 . 68) nil (61 . 64) (t 23704 29569 254112 271000) nil (222 . 224) ("    " . 222) ((marker . 999) . -4) (226 . 227) nil (221 . 226) nil (220 . 221) nil (219 . 220) nil (218 . 219) nil (212 . 218) nil (211 . 212) nil (" " . -211) ((marker . 999) . -1) 212 nil (206 . 212) nil (205 . 206) nil (196 . 205) nil (194 . 196) ("  " . 193) ((marker . 999) . -2) (192 . 196) nil (189 . 191) ("    " . 189) ((marker . 999) . -4) (193 . 194) nil (188 . 193) nil (187 . 188) nil (186 . 187) nil (185 . 186) nil ("9" . -185) ((marker . 999) . -1) 186 nil (181 . 186) nil (179 . 181) nil (178 . 179) nil (173 . 178) nil (172 . 173) nil (162 . 172) nil (160 . 162) ("  " . 159) ((marker . 999) . -2) (158 . 162) nil (155 . 157) ("    " . 155) ((marker . 999) . -4) (159 . 160) nil (154 . 159) nil (153 . 154) nil (152 . 153) nil (151 . 152) nil (146 . 151) nil (145 . 146) nil (137 . 145) nil (108 . 113) nil (130 . 132) ("  " . 129) ((marker . 999) . -2) (128 . 132) nil (125 . 127) ("    " . 125) ((marker . 999) . -4) (129 . 130) nil (124 . 129) nil (123 . 124) nil (122 . 123) nil (121 . 122) nil (116 . 121) nil (115 . 116) nil (108 . 115) nil (106 . 108) ("  " . 105) ((marker . 999) . -2) (104 . 108) nil (69 . 72) nil (92 . 97) nil (";" . -96) ((marker . 999) . -1) 97 nil (96 . 97) nil (93 . 95) ("    " . 93) ((marker . 999) . -4) (97 . 98) nil (92 . 97) nil (91 . 92) nil (90 . 91) nil (89 . 90) nil (84 . 89) nil (83 . 84) nil (76 . 83) nil (72 . 76) nil (69 . 72) nil ("  " . 62) (70 . 71) nil (64 . 70) nil (61 . 64) nil (63 . 64) nil ("  " . 62) ((marker . 999) . -2) (64 . 65) nil (61 . 64) nil (60 . 61) nil (59 . 60) nil ("(" . -59) ((marker . 999) . -1) 60 nil (59 . 60) nil (43 . 59) nil (42 . 43) nil (40 . 42) (t 23704 29436 174047 805000) nil ("
" . -19) ((marker . 999) . -1) ((marker . 1) . -1) ((marker . 19) . -1) 20 nil ("#include<string" . -20) ((marker . 999) . -15) ((marker . 19) . -15) 35 nil (">" . -35) ((marker . 999) . -1) ((marker . 19) . -1) ((marker*) . 1) ((marker) . -1) 36 nil (91 . 92) nil (90 . 91) nil (87 . 90) nil ("
" . 93) nil ("  string com;" . 93) ((marker . 789) . -13) (t 23704 29419 202390 517000) nil (265 . 266) 246 nil (243 . 245) (243 . 244) nil (244 . 248) ("    " . 243) ((marker . 999) . -4) (242 . 248) nil (237 . 241) ("      " . 237) 244 nil (220 . 221) nil (219 . 220) ("else" . 219) ((marker . 999) . -4) (215 . 219) 219 nil (241 . 242) nil (234 . 241) nil (228 . 234) nil (226 . 228) nil (220 . 226) (" " . 219) ((marker . 999) . -1) (220 . 221) nil (219 . 220) ("else" . 219) ((marker . 999) . -4) (215 . 219) 219 nil (214 . 219) nil (209 . 213) ("      " . 209) ((marker . 999) . -6) (215 . 216) nil (208 . 215) nil (203 . 208) nil (201 . 203) nil (194 . 201) nil (193 . 194) nil (192 . 193) nil (191 . 192) nil (" " . -191) ((marker . 999) . -1) 192 nil (188 . 192) nil (165 . 168) nil ("q" . 165) nil (185 . 186) nil (182 . 185) nil (178 . 182) nil (89 . 91) nil (88 . 89) nil (86 . 88) nil (85 . 86) nil (170 . 171) nil (168 . 170) nil (166 . 168) nil (163 . 166) nil (161 . 163) nil (158 . 161) nil (156 . 158) nil (155 . 156) nil ("n" . -155) ((marker . 999) . -1) 156 nil (152 . 156) nil (35 . 36) nil (32 . 35) nil ("o" . -32) ((marker . 999) . -1) ((marker . 19) . -1) ("n" . -33) ((marker . 999) . -1) ((marker . 19) . -1) ("g" . -34) ((marker . 999) . -1) ((marker . 19) . -1) (">" . -35) ((marker . 999) . -1) ((marker . 19) . -1) ((marker*) . 1) ((marker) . -1) 36 nil (35 . 36) nil (29 . 35) nil (28 . 29) nil (21 . 28) nil (20 . 21) nil (19 . 20) nil (82 . 83) nil (79 . 82) nil ("o" . -79) ((marker . 999) . -1) 80 nil (74 . 80) nil (72 . 74) nil (69 . 72) nil (116 . 121) nil (115 . 116) nil (114 . 115) nil (113 . 114) nil ("9" . -113) ((marker . 999) . -1) 114 nil (109 . 114) nil (108 . 109) nil (106 . 108) nil (105 . 106) nil (102 . 105) nil (101 . 102) nil (100 . 101) nil (96 . 100) nil (95 . 96) nil (91 . 95) nil (89 . 91) ("  " . 88) ((marker . 999) . -2) (90 . 91) nil (87 . 90) nil (86 . 87) nil (84 . 86) nil (82 . 84) nil (81 . 82) nil ("." . -81) ((marker . 999) . -1) (" " . -82) ((marker . 999) . -1) 83 nil (79 . 83) nil (77 . 79) nil (73 . 77) nil (71 . 73) ("  " . 70) ((marker . 999) . -2) (69 . 73) nil (63 . 64) nil (62 . 63) nil (61 . 62) nil (65 . 66) nil (63 . 65) nil (62 . 63) nil (57 . 62) nil (apply yas--snippet-revive 1 72 #s(yas--snippet nil nil #s(yas--exit 57 nil) 3 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 57 nil) 3 nil nil nil nil)) (1 . 72) nil ("#include<iostream>
using namespace std;

const int N = 10000;

class DisjointSet {
  int parent[N], rank[N];

public:
  // コンストラクタ
  DisjointSet(int n) {
    for (int i = 0; i < n; i++) make_set(i);
  };
  
  void make_set(int x) {
    rank[x] = 0;
    parent[x] = x;
  }
  
  int find(int x) {
    if (x != parent[x]) parent[x] = find(parent[x]);
    return parent[x];
  }
  
  void unite(int x, int y) {
    int root_x, root_y;
    root_x = find(x);
    root_y = find(y);
    
    if (rank[root_x] > rank[root_y]) {
      parent[root_y] = root_x;
    } else if (rank[root_x] < rank[root_y]) {
      parent[root_x] = root_y;
    } else {
      parent[root_y] = root_x;
      root_x++;
    }
  }  

  bool same(int x, int y) {
    return find(x) == find(y);
  }
};



int main() {
  int i, n, q, com, x, y;

  cin >> n >> q;

  DisjointSet ds(n);  // 初期化

  for (i = 0; i < q; i++) {
    cin >> com >> x >> y;
    // same
    if (com) cout << ds.same(x, y) << endl;
    // unite
    else ds.unite(x, y);
  }  

  return 0;
}
" . 1) ((marker . 999) . -1025) ((marker . 194) . -110) ((marker . 19) . -18) ((marker) . -1025) 1026 (t 23703 29890 638913 549000) nil ("    }" . 1004) nil ("
" . 1004) nil (989 . 992) (t 23703 29879 690558 109000) nil (1000 . 1001) nil (999 . 1000) nil (998 . 999) nil ("Y" . -998) ("9" . -999) 1000 nil (997 . 1000) nil (996 . 997) nil (995 . 996) nil (994 . 995) nil (989 . 994) nil (988 . 989) (" x" . -988) (988 . 990) ("else" . 988) (984 . 988) 988 nil (984 . 988) nil (979 . 984) nil (967 . 971) ("      " . 967) nil ("
" . 967) nil ("    else " . 967) nil (917 . 922) nil (915 . 917) nil (910 . 915) nil (" " . -954) (" " . -955) ("/" . -956) ("/" . -957) 958 nil (956 . 958) nil (954 . 956) nil (963 . 964) (" x" . -963) (963 . 965) ("else" . 963) (959 . 963) 963 nil (959 . 963) nil ("}" . -959) (" " . -960) ("e" . -961) ("l" . -962) ("s" . -963) ("e" . -964) (" " . -965) ("{" . -966) 967 nil ("      if (ds.same(x, y)) " . 954) nil ("      
" . 954) nil ("
" . 954) nil (953 . 954) nil (948 . 953) nil (946 . 948) nil (945 . 946) nil (944 . 945) nil (942 . 944) nil (941 . 942) nil (940 . 941) nil (939 . 940) nil (935 . 939) nil ("a" . -935) ("a" . -936) 937 nil (931 . 937) nil (929 . 931) nil (924 . 929) nil ("{" . -924) 925 nil ("p" . -932) 933 nil (932 . 933) nil (925 . 932) nil ("{" . -951) 952 nil (951 . 952) nil (950 . 951) nil (936 . 939) nil (926 . 932) ("           " . 926) 931 nil (" 
" . 931) nil (804 . 806) nil (803 . 804) nil (801 . 803) nil (800 . 801) nil (901 . 903) nil (899 . 901) nil (896 . 899) nil (894 . 896) nil (893 . 894) nil (909 . 916) nil (929 . 931) nil (927 . 929) nil (926 . 927) nil (925 . 926) nil (924 . 925) nil (920 . 924) nil (919 . 920) nil (916 . 919) nil ("/" . -916) ("/" . -917) (" " . -918) ("s" . -919) ("a" . -920) ("m" . -921) ("e" . -922) 923 (t 23703 29715 582605 353000) nil (846 . 849) ("初期化" . -846) (846 . 849) ("初期k" . -846) (846 . 849) ("初期" . -846) (846 . 848) ("しょk" . -846) (846 . 849) ("しょ" . -846) (846 . 848) ("sy" . -846) (846 . 848) ("s" . -846) (845 . 847) nil (843 . 845) nil (841 . 843) (t 23703 29703 485757 475000) nil (840 . 841) nil (839 . 840) nil (838 . 839) nil (837 . 838) nil (828 . 837) nil ("n" . -828) 829 nil (823 . 829) nil (820 . 823) nil ("
" . 821) nil ("  for (i = 0; i < n; i++) // make set" . 821) (t 23703 29650 383020 112000) nil (369 . 370) nil (360 . 369) nil (353 . 360) nil (349 . 353) ("      " . -349) 355 nil (347 . 348) nil (346 . 347) nil (337 . 346) nil (336 . 337) nil (320 . 336) nil ("{" . -320) 321 nil (321 . 328) nil (320 . 321) nil (319 . 320) nil (318 . 319) nil (306 . 318) nil ("1= @" . -306) 310 nil ("par" . -310) 313 nil (304 . 313) nil (303 . 304) nil (302 . 303) nil (300 . 302) nil (295 . 300) (t 23703 28816 768786 38000) nil ("      
" . 621) nil ("
" . 621) (t 23703 28799 234304 955000) nil (629 . 631) ("   " . -629) ("   " . 632) nil (618 . 620) ("    " . 618) (622 . 623) nil (617 . 622) nil (";" . -617) 618 nil (399 . 404) nil (612 . 613) nil (607 . 611) ("      " . 607) (613 . 614) nil (606 . 613) nil (605 . 606) nil (603 . 605) nil (597 . 603) nil (590 . 597) nil (589 . 590) nil (583 . 589) nil (";" . -583) 584 nil (578 . 579) nil ("x" . -578) 579 nil ("r" . -583) ("o" . -584) ("o" . -585) ("t" . -586) ("[" . -587) 588 nil (587 . 588) nil ("y" . -587) 588 nil (589 . 596) nil (588 . 589) nil (585 . 588) nil ("t" . -585) 586 nil (578 . 586) nil ("y" . -578) ("]" . -579) 580 nil (576 . 580) nil ("t" . -576) 577 nil (566 . 577) nil (559 . 566) nil (558 . 559) nil (557 . 558) ("else" . 557) (553 . 557) 557 nil (552 . 557) nil (547 . 551) ("      " . 547) (553 . 554) nil (546 . 553) nil (545 . 546) nil (536 . 545) nil (528 . 536) nil (522 . 528) nil (515 . 522) nil (514 . 515) nil (513 . 514) nil (512 . 513) nil ("M" . -499) 500 nil (499 . 500) nil (498 . 499) nil (">" . -498) 499 nil (504 . 512) nil (499 . 504) nil (498 . 499) nil (485 . 498) nil (484 . 485) nil (481 . 484) nil ("{" . -481) 482 nil ("      if (rank[root_x] == rank[root_y]) rank[root_y]++;" . 482) nil ("
" . 482) nil ("      parent[root_x] = root_y;" . 482) nil ("
" . 482) nil (568 . 569) nil (559 . 568) nil (558 . 559) nil ("_" . -558) ("y" . -559) ("[" . -560) 561 nil (558 . 561) nil ("[" . -558) 559 nil (554 . 559) nil ("r" . -554) ("a" . -555) ("n" . -556) ("k" . -557) ("[" . -558) 559 nil (555 . 559) nil (553 . 555) nil (552 . 553) nil (540 . 552) nil (527 . 540) nil ("k" . -527) ("_" . -528) ("x" . -529) 530 nil (529 . 530) nil (524 . 529) nil (523 . 524) nil (520 . 523) nil (513 . 520) nil (512 . 513) nil (510 . 512) nil (489 . 510) nil (482 . 489) nil (438 . 445) nil (437 . 438) nil (" " . 407) (" " . 407) (" " . 407) (" " . 407) (" " . 407) (" " . 407) nil ("{" . -407) ("
" . -408) 409 nil (482 . 489) nil (481 . 482) nil (480 . 481) ("else" . 480) (476 . 480) 480 nil (475 . 480) nil ("    else" . 475) nil ("
" . 475) nil (470 . 474) ("      " . 470) (476 . 477) nil (469 . 476) nil (408 . 415) nil (407 . 408) nil (468 . 470) nil (466 . 468) nil (461 . 466) nil ("    }       " . 461) nil ("
" . 461) nil (436 . 437) nil (" " . 436) (" " . 436) (" " . 436) (" " . 436) (" " . 436) (" " . 436) nil ("
" . 436) nil (" " . -436) ("{" . -437) 438 nil (" " . 475) nil ("
" . 475) nil (470 . 474) ("      " . 470) (476 . 477) nil (469 . 476) nil (468 . 469) nil (460 . 468) nil (445 . 460) nil (438 . 445) nil (437 . 438) nil (436 . 437) nil (435 . 436) nil (426 . 435) nil (422 . 426) nil (422 . 431) nil ("        }" . 422) nil ("
" . 422) nil (423 . 431) ("  " . 423) (" " . 422) (423 . 424) nil ("r" . -423) ("
" . -424) 425 nil (422 . 424) nil (421 . 422) nil (420 . 421) nil (419 . 420) nil (")" . -419) 420 nil (412 . 413) nil ("(" . -412) 413 nil (419 . 420) nil (413 . 419) nil (412 . 413) nil (408 . 412) nil (407 . 408) nil ("r" . -407) ("n" . -408) ("a" . -409) 410 nil (404 . 410) nil (399 . 404) nil (398 . 399) nil (397 . 398) nil (396 . 397) nil (395 . 396) nil (382 . 395) nil ("f" . -382) ("i" . -383) 384 nil (382 . 384) nil (377 . 382) nil (376 . 377) nil (375 . 376) nil (374 . 375) nil (373 . 374) nil (364 . 373) nil ("x" . -364) 365 nil (360 . 365) nil (355 . 360) nil (354 . 355) nil (347 . 354) nil (346 . 347) nil (" " . -346) 347 nil (346 . 347) nil (" " . -346) ("=" . -347) 348 nil (336 . 348) (t 23703 28337 532503 217000) nil (399 . 400) nil (398 . 399) nil (397 . 398) nil (396 . 397) nil (388 . 396) nil (387 . 388) nil (386 . 387) nil (385 . 386) nil (381 . 385) nil (374 . 381) nil ("i" . -374) 375 nil ("f" . -375) (" " . -376) ("(" . -377) 378 nil (377 . 378) nil (374 . 377) nil (369 . 374) nil (370 . 372) ("    " . 370) (374 . 375) nil (369 . 374) nil (368 . 369) nil (367 . 368) nil (366 . 367) nil (360 . 366) nil (359 . 360) nil (" " . -359) 360 nil (354 . 360) nil (353 . 354) nil (349 . 353) nil (344 . 349) nil ("o" . -344) 345 nil (344 . 345) nil ("v" . -344) ("o" . -345) ("i" . -346) ("d" . -347) (" " . -348) 349 nil (344 . 349) nil (342 . 344) ("  " . 341) (340 . 344) (t 23703 28289 392728 79000) nil (331 . 336) nil (332 . 334) ("    " . 332) (336 . 337) nil (331 . 336) nil (330 . 331) nil (329 . 330) nil (";" . -329) 330 nil ("
" . 296) nil ("    return parent[x];" . 296) nil ("
" . 296) nil ("    if (x != parent[x]) parent[x] = find(parent[x]);" . 296) (t 23703 28200 762965 908000) nil (369 . 370) nil (353 . 369) nil (348 . 353) nil (347 . 348) nil (346 . 347) nil (337 . 346) nil (336 . 337) nil (320 . 336) nil ("p" . -320) ("[" . -321) ("x" . -322) ("]" . -323) (" " . -324) ("=" . -325) (" " . -326) 327 nil (321 . 327) nil ("x" . -321) 322 nil (320 . 322) nil ("p" . -320) ("a" . -321) ("r" . -322) ("e" . -323) ("n" . -324) ("t" . -325) ("[" . -326) ("x" . -327) ("]" . -328) (" " . -329) ("=" . -330) 331 nil (320 . 331) nil (319 . 320) nil (318 . 319) nil (304 . 318) nil (303 . 304) nil (300 . 303) nil (296 . 300) nil ("    return y;" . 296) nil ("
" . 296) nil ("    }" . 296) nil ("      
" . 296) nil ("
" . 296) nil ("      x = y;" . 296) nil ("
" . 296) nil ("    while (y != x) {" . 296) nil ("
" . 296) nil ("    y = parent[x];" . 296) nil ("
" . 296) nil ("    int y;" . 296) nil (359 . 366) nil (378 . 379) nil (370 . 378) nil (365 . 370) nil (360 . 364) ("      " . 360) (366 . 367) nil (359 . 366) nil (358 . 359) nil (353 . 358) nil (" " . -353) 354 nil (353 . 354) nil (346 . 353) nil (345 . 346) nil (344 . 345) nil (343 . 344) nil (342 . 343) nil ("p" . -342) ("a" . -343) ("r" . -344) ("e" . -345) ("n" . -346) ("t" . -347) ("[" . -348) ("x" . -349) ("]" . -350) 351 nil (339 . 351) nil (337 . 339) nil (336 . 337) nil (335 . 336) (" x" . -335) (335 . 337) ("while" . 335) (330 . 335) 335 nil (330 . 335) nil ("i" . -330) ("f" . -331) (" " . -332) ("(" . -333) 334 nil (333 . 334) nil (330 . 333) nil (325 . 330) nil (324 . 325) nil (315 . 324) nil ("@" . -315) 316 nil (314 . 316) nil ("=" . -314) 315 nil (311 . 315) nil (306 . 311) nil (305 . 306) nil (302 . 305) nil (300 . 302) (t 23703 27775 400181 720000) nil (296 . 300) ("  " . -296) ("  " . 298) nil (304 . 307) nil (295 . 300) nil (296 . 298) ("    " . 296) (300 . 301) nil ("*" . -300) 301 nil (300 . 301) nil (295 . 300) nil (294 . 295) nil (293 . 294) nil (";" . 293) (t 23703 27757 46559 122000) nil ("    }" . 199) nil ("
" . 199) nil (" " . 186) (" " . 186) (" " . 186) (" " . 186) (" " . 186) nil ("
" . 186) nil (" " . -186) ("{" . -187) 188 nil ("
" . 189) nil ("      parent[i] = 0;" . 189) nil ("
" . 189) nil ("      rank[i] = 0;" . 189) (t 23703 27744 842098 237000) nil (326 . 329) nil (321 . 322) nil (308 . 321) nil (303 . 308) nil (302 . 303) nil (291 . 302) nil ("r" . -291) ("a" . -292) ("n" . -293) ("k" . -294) ("_" . -295) 296 nil (291 . 296) nil (286 . 291) nil (287 . 289) ("    " . 287) (291 . 292) nil (286 . 291) nil (285 . 286) nil (284 . 285) nil (";" . -284) 285 nil (258 . 261) (t 23703 27668 631769 853000) nil (227 . 228) nil (221 . 227) nil ("8" . -221) ("]" . -222) 223 nil (214 . 223) nil (207 . 214) nil (206 . 207) nil (195 . 206) nil (189 . 195) ("     " . -189) (" " . 194) nil (215 . 219) ("      " . 215) (221 . 222) nil (214 . 221) nil (188 . 195) nil (188 . 195) nil (187 . 188) (t 23703 27516 611911 761000) nil (198 . 199) nil (197 . 198) nil (196 . 197) nil (195 . 196) nil (187 . 195) nil ("{" . -187) 188 nil (187 . 188) nil (186 . 187) nil (185 . 186) nil (181 . 185) nil (150 . 151) nil ("x" . -150) 151 nil (180 . 181) nil (179 . 180) nil (178 . 179) nil (" " . -178) ("n" . -179) (";" . -180) (" " . -181) ("i" . -182) 183 nil (181 . 183) nil (180 . 181) nil (178 . 180) nil (177 . 178) nil (175 . 177) nil (" " . -175) 176 nil (174 . 176) nil (173 . 174) nil (164 . 173) nil (163 . 164) nil (159 . 163) nil (124 . 131) ("コンストラクタ" . -124) (124 . 131) ("コンストラクt" . -124) (124 . 131) ("コンストラク" . -124) (124 . 130) ("コンストラk" . -124) (124 . 130) ("コンストラ" . -124) (124 . 129) ("コンストr" . -124) (124 . 129) ("コンスト" . -124) (124 . 128) ("コンスt" . -124) (124 . 128) ("こんす" . -124) (124 . 127) ("こんs" . -124) (124 . 127) ("こんs" . -124) (124 . 127) ("こn" . -124) (124 . 126) ("こ" . -124) (124 . 125) ("k" . -124) (123 . 125) nil (121 . 123) nil (118 . 121) nil (142 . 146) ("    " . 142) nil ("
" . 227) nil ("}" . 227) nil ("  
" . 227) nil ("
" . 227) nil ("void DisjointSet::make_set(int x) {" . 227) (t 23703 27450 295182 223000) nil (90 . 96) nil ("k" . -90) ("e" . -91) ("y" . -92) 93 (t 23703 27291 915063 221000) nil (105 . 106) nil (98 . 105) nil (97 . 98) nil (96 . 97) nil (90 . 96) nil ("node[N];" . 90) nil (130 . 135) nil (134 . 135) nil (131 . 133) ("    " . 131) (135 . 136) nil (130 . 135) nil (129 . 130) nil (128 . 129) nil (";" . -128) 129 nil ("
" . 204) nil ("
" . 205) nil ("Disjo" . 205) nil (207 . 210) nil (205 . 207) nil (203 . 205) nil (128 . 129) nil (127 . 128) nil (122 . 127) nil (121 . 122) nil (110 . 121) nil (107 . 110) nil (218 . 221) nil ("  " . 219) (221 . 222) nil (218 . 221) nil (217 . 218) nil (216 . 217) nil undo-tree-canary))
