
((digest . "377197b6176584a029a06cb86a107bb6") (undo-list nil (" " . -117) ((marker . 53) . -1) 118 nil (113 . 117) nil (" " . -113) ((marker . 53) . -1) (" " . -114) ((marker . 53) . -1) (" " . -115) ((marker . 53) . -1) (" " . -116) ((marker . 53) . -1) 117 nil (114 . 117) nil (nil rear-nonsticky nil 129 . 130) (nil fontified nil 129 . 130) (nil fontified nil 125 . 129) (nil fontified nil 119 . 125) (nil fontified nil 116 . 119) (nil fontified nil 115 . 116) (nil fontified nil 113 . 115) (nil fontified nil 108 . 113) (nil fontified nil 104 . 108) (nil fontified nil 103 . 104) (nil fontified nil 102 . 103) (nil fontified nil 100 . 102) (nil fontified nil 97 . 100) (nil fontified nil 96 . 97) (nil fontified nil 94 . 96) (nil fontified nil 93 . 94) (nil fontified nil 84 . 93) (nil fontified nil 83 . 84) (nil fontified nil 79 . 83) (nil fontified nil 78 . 79) (nil fontified nil 77 . 78) (nil fontified nil 76 . 77) (nil category c->-as-paren-syntax 76 . 77) (nil fontified nil 68 . 76) (nil fontified nil 67 . 68) (nil category c-<-as-paren-syntax 67 . 68) (nil fontified nil 60 . 67) (nil fontified nil 59 . 60) (nil c-in-sws nil 76 . 77) (nil face nil 76 . 77) (nil category nil 76 . 77) (nil syntax-table nil 76 . 77) (nil risky-local-variable nil 76 . 77) (nil fontified nil 76 . 77) (nil c-in-sws t 76 . 77) (nil face font-lock-string-face 76 . 77) (nil category c->-as-paren-syntax 76 . 77) (nil c-in-sws nil 67 . 68) (nil face nil 67 . 68) (nil category nil 67 . 68) (nil syntax-table nil 67 . 68) (nil risky-local-variable nil 67 . 68) (nil fontified nil 67 . 68) (nil c-in-sws t 67 . 68) (nil face font-lock-string-face 67 . 68) (nil category c-<-as-paren-syntax 67 . 68) (59 . 130) nil (apply yas--snippet-revive 1 59 #s(yas--snippet nil (#s(yas--field 1 33 39 nil (#s(yas--mirror 47 53 (yas--key-from-desc yas-text) #s(yas--field 2 47 53 nil nil nil nil #7) #s(yas--exit 59 nil) nil)) nil t #s(yas--field 2 47 53 nil nil nil nil #s(yas--mirror 47 53 (yas--key-from-desc yas-text) #6 #s(yas--exit 59 nil) nil))) #s(yas--field 2 47 53 nil nil nil nil #s(yas--mirror 47 53 (yas--key-from-desc yas-text) #5 #s(yas--exit 59 nil) nil))) #s(yas--exit 59 nil) 26 nil #s(yas--field 1 33 39 nil (#s(yas--mirror 47 53 (yas--key-from-desc yas-text) #s(yas--field 2 47 53 nil nil nil nil #6) #s(yas--exit 59 nil) nil)) nil t #s(yas--field 2 47 53 nil nil nil nil #s(yas--mirror 47 53 (yas--key-from-desc yas-text) #5 #s(yas--exit 59 nil) nil))) nil nil)) nil ("forma" . 53) ((marker) . -5) ((marker) . -5) ((marker . 53) . -5) ((marker . 53) . -5) ((marker . 53) . -5) ((marker . 53) . -5) ((marker . 53) . -5) ((marker . 53) . -5) (47 . 53) (38 . 39) ("form" . 51) ((marker) . -4) ((marker) . -4) ((marker . 53) . -4) ((marker . 53) . -4) ((marker . 53) . -4) ((marker . 53) . -4) ((marker . 53) . -4) (46 . 51) (37 . 38) ("for" . 49) ((marker) . -3) ((marker) . -3) ((marker . 53) . -3) ((marker . 53) . -3) ((marker . 53) . -3) ((marker . 53) . -3) (45 . 49) (36 . 37) ("fo" . 47) ((marker) . -2) ((marker) . -2) ((marker . 53) . -2) ((marker . 53) . -2) ((marker . 53) . -2) (44 . 47) (35 . 36) ("f" . 45) ((marker) . -1) ((marker) . -1) ((marker . 53) . -1) ((marker . 53) . -1) (43 . 45) (34 . 35) (42 . 43) (33 . 34) nil (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 39 nil (#s(yas--mirror 47 53 (yas--key-from-desc yas-text) #s(yas--field 2 47 53 nil nil nil nil #7) #s(yas--exit 59 nil) nil)) nil t #s(yas--field 2 47 53 nil nil nil nil #s(yas--mirror 47 53 (yas--key-from-desc yas-text) #6 #s(yas--exit 59 nil) nil))) #s(yas--field 2 47 53 nil nil nil nil #s(yas--mirror 47 53 (yas--key-from-desc yas-text) #5 #s(yas--exit 59 nil) nil))) #s(yas--exit 59 nil) 26 nil #s(yas--field 1 33 39 nil (#s(yas--mirror 47 53 (yas--key-from-desc yas-text) #s(yas--field 2 47 53 nil nil nil nil #6) #s(yas--exit 59 nil) nil)) nil t #s(yas--field 2 47 53 nil nil nil nil #s(yas--mirror 47 53 (yas--key-from-desc yas-text) #5 #s(yas--exit 59 nil) nil))) nil nil)) (1 . 47)))
